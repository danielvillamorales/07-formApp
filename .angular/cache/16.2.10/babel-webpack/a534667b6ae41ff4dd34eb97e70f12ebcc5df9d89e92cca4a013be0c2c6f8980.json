{"ast":null,"code":"export const cantBeStrider = control => {\n  const value = control.value.trim().toLowerCase();\n  if (value === 'strider') {\n    return {\n      noStrider: true\n    };\n  }\n  return null; // si no hay error\n};\n\nexport const firstNameAndLastnamePattern = '([a-zA-Z]+) ([a-zA-Z]+)';\nexport const emailPattern = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";","map":{"version":3,"names":["cantBeStrider","control","value","trim","toLowerCase","noStrider","firstNameAndLastnamePattern","emailPattern"],"sources":["D:\\importante\\angular\\07-formApp\\src\\app\\shared\\validators\\validators.functions.ts"],"sourcesContent":["import { FormControl, ValidationErrors } from \"@angular/forms\";\r\n\r\nexport const cantBeStrider = (control: FormControl): ValidationErrors | null => {\r\n  const value = control.value.trim().toLowerCase();\r\n  if (value === 'strider') {\r\n    return {\r\n      noStrider: true\r\n    }\r\n  }\r\n  return null // si no hay error\r\n}\r\n\r\nexport const firstNameAndLastnamePattern: string = '([a-zA-Z]+) ([a-zA-Z]+)';\r\nexport const emailPattern: string = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";\r\n\r\n"],"mappings":"AAEA,OAAO,MAAMA,aAAa,GAAIC,OAAoB,IAA6B;EAC7E,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK,CAACC,IAAI,EAAE,CAACC,WAAW,EAAE;EAChD,IAAIF,KAAK,KAAK,SAAS,EAAE;IACvB,OAAO;MACLG,SAAS,EAAE;KACZ;;EAEH,OAAO,IAAI,EAAC;AACd,CAAC;;AAED,OAAO,MAAMC,2BAA2B,GAAW,yBAAyB;AAC5E,OAAO,MAAMC,YAAY,GAAW,2CAA2C"},"metadata":{},"sourceType":"module","externalDependencies":[]}